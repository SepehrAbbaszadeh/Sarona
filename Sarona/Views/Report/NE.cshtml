@model NetworkElement
@*
    For more information on enabling MVC for empty projects, visit https://go.microsoft.com/fwlink/?LinkID=397860
*@
@{
    ViewData["Title"] = "Network Element";
}

<form method="get" class="form-inline" asp-action="Ne">
    <label class="mr-2">Area</label>
    <select asp-items="@Html.GetEnumSelectList<Area>()" class="form-control mr-2" onchange="$('#attachNE').text('');PopulateExchange($(this).val(),'accessExchange');">
        <option value="" disabled selected>Please select an area!</option>
        
    </select>
    <label class="mr-2">Exchange</label>
    <select class="form-control mr-2" id="accessExchange" onchange="PopulateNE($(this).val(), '' ,'attachNE')"></select>
    <label class="mr-2">Network Element</label>
    <select required class="form-control mr-2" name="neId" id="attachNE"></select>
    <button type="submit" class="btn btn-primary">Search</button>
</form>



@if (Model is null)
{

}
else
{
    <h2 class="my-3">@Model.Name (@Model.Model - @Model.Manufacturer)</h2>
    <form id="getExcel" asp-action="NeExcel" asp-controller="Report" method="get">
        <i style="cursor:pointer" onclick="$('#getExcel').submit()" class="fas fa-file-excel fa-2x float-right"></i>
        <input type="hidden" name="neId" value="@Model.Id" />
    </form>
    <ul class="nav nav-tabs" id="tab">
        <li class="nav-item">
            <a class="nav-link active" id="links-tab" data-toggle="tab" href="#links">Links <span class="badge badge-secondary">@Model.LinksOnEnd1.Count()</span></a>
        </li>
        <li class="nav-item">
            <a class="nav-link" id="numberings-tab" data-toggle="tab" href="#numberings">Numberings <span class="badge badge-secondary">@Model.NumberingPoolNetworkElements.Count()</span></a>
        </li>
        <li class="nav-item">
            <a class="nav-link" id="remotes-tab" data-toggle="tab" href="#remotes">Remotes <span class="badge badge-secondary">@Model.NetworkElements.Where(x => x.NetworkType == NeType.Remote).Count()</span></a>
        </li>
        <li class="nav-item">
            <a class="nav-link" id="accesses-tab" data-toggle="tab" href="#accesses">Accesses <span class="badge badge-secondary">@Model.NetworkElements.Where(x => x.NetworkType == NeType.Access).Count()</span></a>
        </li>
    </ul>
    <div class="tab-content" id="tabContent">
        <div class="tab-pane fade show active" id="links">
            <div class="table-responsive mt-3 pb-3">
                <table class="@Settings.TableClass" hidden style="width:100%" id="coreTable">
                    <thead>
                        <tr>
                            <td>Name</td>
                            <td>Exchange</td>
                            <td>Channels</td>
                            <td>[STM1,E1,Channels]</td>
                            <td>Direction</td>
                            <td>Type</td>
                            <td>Remark</td>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var link in Model.LinksOnEnd1)
                        {
                            <tr>
                                <td>@link.End2.Name</td>
                                <td>@link.End2.Exchange.Abb (@link.End2.Exchange.Name)</td>
                                <td>@link.Channels</td>
                                <td>@link.GetStm1E1()</td>
                                <td>@link.Direction</td>
                                <td>@link.Type</td>
                                <td>@link.Remark</td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        </div>
        <div class="tab-pane fade" id="numberings">
            <div class="table-responsive mt-3 pb-3">
                <table class="@Settings.TableClass" hidden style="width:100% !important" id="numberingTable">
                    <thead>
                        <tr>
                            <th>Prefix</th>
                            <th>Min-Max</th>
                            <th>Charging</th>
                            <th>Type</th>
                            <th>Float</th>
                            <th>Remark</th>

                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var number in Model.NumberingPoolNetworkElements)
                        {
                            <tr>
                                <td>@number.Numbering.Prefix</td>
                                <td>@number.Numbering.Min-@number.Numbering.Max</td>
                                <td>@number.Numbering.ChargingCase</td>
                                <td>@number.Numbering.NumberType</td>
                                <td><span class="@(number.Numbering.IsFloat ? "fa fa-check":"fa fa-times")"></span></td>
                                <td>@number.Numbering.Remark</td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>

        </div>
        <div class="tab-pane fade" id="remotes">
            <div class="table-responsive mt-3 pb-3">
                <table id="remoteTable" style="width:100%" hidden class="@Settings.TableClass my-3">
                    <thead>
                        <tr>
                            <td>Name</td>
                            <td>Exchange</td>
                            <td>Area</td>
                            <td>Type</td>
                            <td>Model</td>
                            <td>Manufacturer</td>
                            <td>Installed Capacity</td>
                            <td>Used Capacity</td>
                            <td>Numberings</td>
                            <td>Remark</td>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var remote in Model.NetworkElements.Where(x => x.NetworkType == NeType.Remote))
                        {
                            <tr>
                                <td>@remote.Name</td>
                                <td>@remote.Exchange.Abb (@remote.Exchange.Name)</td>
                                <td>@remote.Exchange.Area</td>
                                <td>@remote.Type</td>
                                <td>@remote.Model</td>
                                <td>@remote.Manufacturer</td>
                                <td>@remote.InstalledCapacity</td>
                                <td>@remote.UsedCapacity</td>
                                <td>@remote.GetNumberings()</td>
                                <td>@remote.Remark</td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>

        </div>
        <div class="tab-pane fade" id="accesses">
            <div class="table-responsive mt-3 pb-3">
                <table id="accessTable" style="width:100%" hidden class="@Settings.TableClass my-3">
                    <thead>
                        <tr>
                            <td>Name</td>
                            <td>Exchange</td>
                            <td>Area</td>
                            <td>Type</td>
                            <td>Model</td>
                            <td>Manufacturer</td>
                            <td>Installed Capacity</td>
                            <td>Used Capacity</td>
                            <td>Numberings</td>
                            <td>Remark</td>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var remote in Model.NetworkElements.Where(x => x.NetworkType == NeType.Access))
                        {
                            <tr>
                                <td>@remote.Name</td>
                                <td>@remote.Exchange.Abb (@remote.Exchange.Name)</td>
                                <td>@remote.Exchange.Area</td>
                                <td>@remote.Type</td>
                                <td>@remote.Model</td>
                                <td>@remote.Manufacturer</td>
                                <td>@remote.InstalledCapacity</td>
                                <td>@remote.UsedCapacity</td>
                                <td>@remote.GetNumberings()</td>
                                <td>@remote.Remark</td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>

        </div>
    </div>
}

@section Scripts{
    <script>
        $(document).ready(function () {
            $('#numberingTable').DataTable({
                pageLength: 50
            });
            $('#numberingTable').removeAttr("hidden");
        });

        $(document).ready(function () {
            $('#coreTable').DataTable({
                pageLength: 50
            });
            $('#coreTable').removeAttr("hidden");
        });

        $(document).ready(function () {
            $('#remoteTable').DataTable({
                pageLength: 50
            });
            $('#remoteTable').removeAttr('hidden');
        });

        $(document).ready(function () {
            $('#accessTable').DataTable({
                pageLength: 50
            });
            $('#accessTable').removeAttr('hidden');
        });

    </script>


}